{"version":3,"file":"commonHelpers.js","sources":["../src/js/pixabay-api.js","../src/js/render-functions.js","../src/main.js"],"sourcesContent":["// import iziToast from 'izitoast';\n// import 'izitoast/dist/css/iziToast.min.css';\n\n// export function getPhotos(inputValue) {\n//   const API_KEY = '43330031-9673f4a92262d12e3841226eb';\n//   const searchParams = new URLSearchParams({\n//     key: API_KEY,\n//     q: inputValue,\n//     image_type: 'photo',\n//     orientation: 'horizontal',\n//     safesearch: true,\n//     per_page: 15,\n//   });\n\n//   return fetch(`https://pixabay.com/api/?${searchParams}`).then(response => {\n//     if (!response.ok) {\n//       throw new Error(response.status);\n//     }\n//     return response.json();\n//   });\n// }\n\nimport axios from \"axios\";\n\nexport async function getPhotos(inputValue) {\n  const URLservice = 'https://pixabay.com/api/';\n  const API_KEY = '43330031-9673f4a92262d12e3841226eb';\n\n  try {\n    const { data } = await axios(URLservice, {\n      params: {\n        key: API_KEY,\n        q: inputValue,\n        image_type: 'photo',\n        orientation: 'horizontal',\n        safesearch: true,\n        per_page: 15,\n      },\n    });\n    return data;\n  } catch (error) {\n    console.log(error.message);\n  }\n}\n","export function renderImages(arr) {\n  return arr\n    .map(\n      ({\n        webformatURL,\n        largeImageURL,\n        tags,\n        likes,\n        views,\n        comments,\n        downloads,\n      }) =>\n        `\n        <li class=\"gallary-item\">\n          <a class=\"gallary-link\" href=\"${largeImageURL}\">\n              <img \n                class=\"gallary-image\" \n                src=\"${webformatURL}\"\n                alt=\"${tags}\"\n                width = \"1000\"\n                height = \"800\"\n              />\n          </a>\n          <div class=\"gallary-desc\">\n            <ul class=\"gallary-desc-list\">\n              <li class=\"gallary-desc-item\">\n                <p>Likes</p>\n                <p>${likes}</p>\n              </li>\n              <li class=\"gallary-desc-item\">\n                <p>Views</p>\n                <p>${views}</p>\n              </li>\n              <li class=\"gallary-desc-item\">\n                <p>Comments</p>\n                <p>${comments}</p>\n              </li>\n              <li class=\"gallary-desc-item\">\n                <p>Downloads</p>\n                <p>${downloads}</p>\n              </li>\n            </ul>\n          </div>\n        </li>\n      `\n    )\n    .join('');\n}\n","import iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nimport SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\n\nimport { getPhotos } from './js/pixabay-api.js';\nimport { renderImages } from './js/render-functions.js';\n\nconst formEl = document.querySelector('.form-search');\nconst gallaryEl = document.querySelector('.gallary');\nconst loaderEl = document.querySelector('span');\nconst lightbox = new SimpleLightbox('.gallary a', {\n  captionsData: 'alt',\n  captionDelay: 250,\n});\n\nformEl.addEventListener('submit', event => {\n  event.preventDefault();\n  const inputValue = event.target.elements.input.value;\n\n  loaderEl.classList.add('is-visible');\n  gallaryEl.innerHTML = '';\n  \n  getPhotos(inputValue)\n    .then(data => {\n      loaderEl.classList.remove('is-visible');\n      if (inputValue === '') {\n        iziToast.show({\n          message: 'Field must be filled!',\n          color: 'green', // blue, red, green, yellow\n          position: 'center', // bottomRight, bottomLeft, topRight, topLeft, topCenter, bottomCenter, center\n          timeout: 2000,\n        });\n        return;\n      }\n      if (Object.keys(data.hits).length === 0) {\n        iziToast.show({\n          message:\n            'Sorry, there are no images matching your search query. Please try again!',\n          color: 'blue', // blue, red, green, yellow\n          position: 'center', // bottomRight, bottomLeft, topRight, topLeft, topCenter, bottomCenter, center\n          timeout: 3000,\n        });\n      }\n      gallaryEl.insertAdjacentHTML('beforeend', renderImages(data.hits));\n      lightbox.refresh();\n    })\n    .catch(error => console.log(error));\n  formEl.reset();\n});\n"],"names":["getPhotos","inputValue","URLservice","API_KEY","data","axios","error","renderImages","arr","webformatURL","largeImageURL","tags","likes","views","comments","downloads","formEl","gallaryEl","loaderEl","lightbox","SimpleLightbox","event","iziToast"],"mappings":"owBAwBO,eAAeA,EAAUC,EAAY,CAC1C,MAAMC,EAAa,2BACbC,EAAU,qCAEhB,GAAI,CACF,KAAM,CAAE,KAAAC,CAAI,EAAK,MAAMC,EAAMH,EAAY,CACvC,OAAQ,CACN,IAAKC,EACL,EAAGF,EACH,WAAY,QACZ,YAAa,aACb,WAAY,GACZ,SAAU,EACX,CACP,CAAK,EACD,OAAOG,CACR,OAAQE,EAAO,CACd,QAAQ,IAAIA,EAAM,OAAO,CAC1B,CACH,CC3CO,SAASC,EAAaC,EAAK,CAChC,OAAOA,EACJ,IACC,CAAC,CACC,aAAAC,EACA,cAAAC,EACA,KAAAC,EACA,MAAAC,EACA,MAAAC,EACA,SAAAC,EACA,UAAAC,CACD,IACC;AAAA;AAAA,0CAEkCL,CAAa;AAAA;AAAA;AAAA,uBAGhCD,CAAY;AAAA,uBACZE,CAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBASNC,CAAK;AAAA;AAAA;AAAA;AAAA,qBAILC,CAAK;AAAA;AAAA;AAAA;AAAA,qBAILC,CAAQ;AAAA;AAAA;AAAA;AAAA,qBAIRC,CAAS;AAAA;AAAA;AAAA;AAAA;AAAA,OAMzB,EACA,KAAK,EAAE,CACZ,CCtCA,MAAMC,EAAS,SAAS,cAAc,cAAc,EAC9CC,EAAY,SAAS,cAAc,UAAU,EAC7CC,EAAW,SAAS,cAAc,MAAM,EACxCC,EAAW,IAAIC,EAAe,aAAc,CAChD,aAAc,MACd,aAAc,GAChB,CAAC,EAEDJ,EAAO,iBAAiB,SAAUK,GAAS,CACzCA,EAAM,eAAc,EACpB,MAAMpB,EAAaoB,EAAM,OAAO,SAAS,MAAM,MAE/CH,EAAS,UAAU,IAAI,YAAY,EACnCD,EAAU,UAAY,GAEtBjB,EAAUC,CAAU,EACjB,KAAKG,GAAQ,CAEZ,GADAc,EAAS,UAAU,OAAO,YAAY,EAClCjB,IAAe,GAAI,CACrBqB,EAAS,KAAK,CACZ,QAAS,wBACT,MAAO,QACP,SAAU,SACV,QAAS,GACnB,CAAS,EACD,MACD,CACG,OAAO,KAAKlB,EAAK,IAAI,EAAE,SAAW,GACpCkB,EAAS,KAAK,CACZ,QACE,2EACF,MAAO,OACP,SAAU,SACV,QAAS,GACnB,CAAS,EAEHL,EAAU,mBAAmB,YAAaV,EAAaH,EAAK,IAAI,CAAC,EACjEe,EAAS,QAAO,CACtB,CAAK,EACA,MAAMb,GAAS,QAAQ,IAAIA,CAAK,CAAC,EACpCU,EAAO,MAAK,CACd,CAAC"}